- name: Create new OU and move Fileserver
  ansible.windows.win_powershell:
    script: |
      Import-Module ActiveDirectory
      if (Test-Path 'AD:\OU=Servers,DC=PLUMETECH,DC=LOCAL') {
        $Ansible.Changed = $false
      } else {
      New-ADOrganizationalUnit -Name "Servers"
        Move-ADObject -Identity "CN=FS1,CN=Computers,DC=PLUMETECH,DC=LOCAL" -TargetPath "OU=Servers,DC=PLUMETECH,DC=LOCAL"
        $Ansible.Changed = $true
      } 
   
- name: Copy Policies to Domain Controller
  win_copy:
    src: GPO.zip
    dest: 'C:\'
- name: Expand ZIP Archive and Import Group Policies
  ansible.windows.win_powershell: 
    script: |
      if (Get-GPO -name 'Custom Domain Controller Policy' -ea 'silentlycontinue') {
        $Ansible.Changed = $false
        $Ansible.Result = "done"
      } else {  
        Expand-Archive -Path C:\GPO.zip -DestinationPath C:\
        $dcgp = New-GPO -Name 'Custom Domain Controller Policy'
        $dcgp | Import-GPO -Path C:\GPO -BackupGpoName 'Custom Domain Controller Policy' -TargetGuid $dcgp.Id
        $dcgp | New-GPLink -Target 'OU=Domain Controllers,DC=PLUMETECH,DC=LOCAL' -LinkEnabled Yes
        $fsgp = New-GPO -Name 'Custom Server Policy'
        $fsgp | Import-GPO -Path C:\GPO -BackupGpoName 'Custom Server Policy' -TargetGuid $fsgp.Id
        $fsgp | New-GPLink -Target 'OU=Servers,DC=PLUMETECH,DC=LOCAL' -LinkEnabled Yes
        $domaingp = New-GPO -Name 'Custom Domain Policy'
        $domaingp | Import-GPO -Path C:\GPO -BackupGpoName 'Custom Domain Policy' -TargetGuid $domaingp.Id
        $domaingp | New-GPLink -Target 'DC=PLUMETECH,DC=LOCAL' -LinkEnabled Yes
        Remove-Item C:\GPO -Recurse -Force
        $Ansible.Changed = $true
        $Ansible.Result = "installed_policies"
        Write-Host "installed_policies"
      } 
      Remove-Item C:\GPO.zip -Force
  register: gpreturn
- name: Set Auditing on Domain Root
  ansible.windows.win_powershell:
    script: |
      Import-Module ActiveDirectory
      $auditRule = New-Object System.DirectoryServices.ActiveDirectoryAuditRule([System.Security.Principal.SecurityIdentifier]'S-1-5-11', [System.DirectoryServices.ActiveDirectoryRights]::WriteProperty, [System.Security.AccessControl.AuditFlags]::Success, [System.DirectoryServices.ActiveDirectorySecurityInheritance]::All)
      $acl = Get-Acl -Path "AD:DC=PLUMETECH,DC=LOCAL" -Audit
      $acl.AddAuditRule($auditRule)
      Set-Acl -Path "AD:DC=PLUMETECH,DC=LOCAL" -AclObject $acl
- name: Add nested group in Domain Admins
  ansible.windows.win_powershell:
    script: |
      Import-Module ActiveDirectory
      if (Test-Path 'AD:\CN=Server Admins,CN=Users,DC=PLUMETECH,DC=LOCAL') {
        $Ansible.Changed = $false
      } else {
        New-ADGroup -Name 'Server Admins' -Description 'Group for managing server infrastructure' -GroupScope Global -Path "CN=Users,DC=plumetech,DC=local"
        Add-ADGroupMember -Identity 'Domain Admins' -Members 'Server Admins'
        $Ansible.Changed = $true
      } 
- name: Configure ESC1
  ansible.windows.win_powershell:
    script: |
      if (Test-Path 'AD:\CN=Smartcard,CN=Certificate Templates,CN=Public Key Services,CN=Services,CN=Configuration,DC=PLUMETECH,DC=LOCAL') {
        $Ansible.changed = $false
      } else {  
        Invoke-WebRequest https://raw.githubusercontent.com/Orange-Cyberdefense/GOAD/refs/heads/main/ansible/roles/adcs_templates/files/ADCSTemplate/ADCSTemplate.psm1 -Outfile ./ADCSTemplate.psm1
        Import-Module ./ADCSTemplate.psm1
        Invoke-WebRequest https://raw.githubusercontent.com/Orange-Cyberdefense/GOAD/refs/heads/main/ansible/roles/adcs_templates/files/ESC1.json -OutFile ESC1.json
        Install-Module ADCSTemplate
        New-ADCSTemplate -DisplayName Smartcard -JSON (Get-Content .\ESC1.json -Raw) -Publish -Identity 'plumetech\Domain Users'
        Remove-Item ./ADCSTEmplate.psm1
        Remove-Item ./ESC1.json
        $Ansible.changed = $true
      }
- name: Reboot Domain Controller
  win_reboot:
  when: gpreturn.result == 'installed_policies'
